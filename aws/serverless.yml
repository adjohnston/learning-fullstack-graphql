service: aws

plugins:
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs6.10
  profile: learning-fullstack-apollo
  stage: dev
  environment:
    NAMES_TABLE: ${self:service}-${opt:stage, self:provider.stage}-names
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.NAMES_TABLE}"

functions:
  graphql:
    handler: handler.graphqlHandler
    events:
      - http:
          path: graphql
          method: get
          cors: true

      - http:
          path: graphql
          method: post
          cors: true

  graphiql:
    handler: handler.graphiqlHandler
    events:
      - http:
          path: graphiql
          method: get
          cors: true

resources:
  Resources:
    NamesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.NAMES_TABLE}
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
